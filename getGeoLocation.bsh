#!/bin/bash

# Function to fetch geographic data from Open-Meteo API
# Arguments: $1 - City name (with spaces)
# Returns: JSON response from API
fetch_api_data() {
    # Convert spaces to '+' for URL encoding
    local city=$(echo "$1" | tr " " "+")
    
    # Make silent curl request to API endpoint
    curl -s "https://geocoding-api.open-meteo.com/v1/search?name=${city}&count=1&language=en&format=json"
}

# Function to parse and display API results
# Arguments: $1 - JSON data from API response
display_api_data() {
    local apiData="$1"
    
    # Extract values from JSON using jq:
    # -r gives raw output without quotes
    local country=$(echo "$apiData" | jq -r '.results[0].country')
    local longitude=$(echo "$apiData" | jq -r '.results[0].longitude')
    local latitude=$(echo "$apiData" | jq -r '.results[0].latitude')
    local name=$(echo "$apiData" | jq -r '.results[0].name')
    
    # Display formatted location information
    echo "$country, $latitude, $longitude, $name"
}

# Main function controls program flow
main() {
    # Check if first argument exists
    if [ ! -z "$1" ]; then
        local city="$1"
        # Get geographic data from API
        local geoData=$(fetch_api_data "$city")
        # Display parsed results
        display_api_data "$geoData"
    else
        # Show usage instructions if no arguments provided
        echo "Usage: $0 [city]"
    fi
}

# Execute main function with all command-line arguments
main "$@"
